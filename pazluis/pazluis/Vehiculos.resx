<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZ
        WiAHzgACAAkABgAxAABhY3NwTVNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLUhQ
        ICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAA
        ADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAABRia3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAA
        ABRiWFlaAAACQAAAABRkbW5kAAACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAA
        ACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAA
        CAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29t
        cGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2
        LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAA
        AAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAA
        AAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3
        LmllYy5jaAAAAAAAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQg
        UkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdC
        IGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJl
        bmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBW
        aWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZp
        ZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAK
        AA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCf
        AKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFF
        AUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIv
        AjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNm
        A3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTw
        BP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbR
        BuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQ
        CSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuw
        C8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62
        DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxIm
        EkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYD
        FiYWSRZsFo8WshbWFvoXHRdBF2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpR
        GncanhrFGuwbFBs7G2MbihuyG9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8T
        Hz4faR+UH78f6iAVIEEgbCCYIMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRN
        JHwkqyTaJQklOCVoJZclxyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoC
        KjUqaCqbKs8rAis2K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1
        MGwwpDDbMRIxSjGCMbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbp
        NyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4g
        PmA+oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXe
        RiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4l
        Tm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3
        V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBX
        YKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpI
        ap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTM
        dSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/l
        gEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuW
        i/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfg
        mEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTH
        pTilqaYapoum/adup+CoUqjEqTepqaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJL
        ssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBw
        wOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83
        z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i
        3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO60
        70DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t
        ////2wBDAAoHBwgHBgoICAgLCgoLDhgQDg0NDh0VFhEYIx8lJCIfIiEmKzcvJik0KSEiMEExNDk7Pj4+
        JS5ESUM8SDc9Pjv/2wBDAQoLCw4NDhwQEBw7KCIoOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7
        Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozv/wgARCAEsAcIDASIAAhEBAxEB/8QAGgABAQEBAQEBAAAAAAAAAAAA
        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
</value>
  </data>
</root>